@model Dictionary<string, int>
@{
    ViewData["Title"] = "MatriculasAtivas";
}

<h2>Matriculas Ativas</h2>
<hr />



@*@foreach (var curso in Model.Where(m => m.Key != "total").OrderByDescending(m => m.Value))
    {
        <div class="row">
            <div class="col-md-1 col-sm-2">
                <p>@curso.Key</p>
            </div>
            <div class="col-md-1 col-sm-2">
                @{
                    var porcentagem = curso.Value * 100 / Model.First(m => m.Key == "total").Value;
                }
                <p>@curso.Value</p>
            </div>
            <div class="col-md-6 col-sm-8">
                <div class="progress">
                    <div class="progress-bar" role="progressbar" style="width: @porcentagem%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">@porcentagem%</div>
                </div>
            </div>
        </div>
    }*@
<div class="row">
    <div class="col-md-8">
        <div id="container" style="width: 100%;">
            <canvas id="canvas"></canvas>
        </div>
    </div>
    <div class="col-md-4">
        <div class="container">
            <h4>Matrículas ativas</h4>
            <br />
            <table class="table table-hover table-sm">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Total</th>
                    </tr>
                </thead>
                <tbody>
                    
                        @foreach (var curso in Model.OrderByDescending(m => m.Value).ToList())
                        {
                            <tr>
                                <th scope="row">@curso.Key</th>
                                <td>@curso.Value</td>
                            </tr>
                        }


                </tbody>
            </table>
        </div>
    </div>
</div>

<hr />
<div class="row">
    <div class="col-md-8">
        <div id="container" style="width: 100%;">
            <canvas id="pie"></canvas>
        </div>
    </div>
    <div class="col-md-4">
        <div class="container">
            <h4>Matrículas ativas</h4>
            <br />
            <table class="table table-hover table-sm">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">%</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var curso in Model.Where(m => m.Key != "Total").OrderByDescending(m => m.Value).ToList())
                    {
                        var porcentagem = (float) curso.Value * 100 / Model.First(m => m.Key == "Total").Value;
                        <tr>
                            <th scope="row">@curso.Key</th>
                            <td>@porcentagem.ToString("0.00")%</td>
                        </tr>
                    }


                </tbody>
            </table>
        </div>
    </div>
</div><script src="~/vendor/Chart.js/Chart.min.js"></script>
    <script src="~/vendor/Chart.js/samples/utils.js"></script>
    <script>
        function getRandomColor(n) {
            let cores = [];
            for (let i = 0; i < n; i++) {
                const letters = '0123456789ABCDEF';
                let color = '#';
                for (let i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                cores.push(color);
            }

            return cores;
        }

        var color = Chart.helpers.color;
        var barChartData = {
            labels: [
                   @foreach (var curso in Model.Where(m => m.Key != "Total").OrderByDescending(m => m.Value).ToList())
                   {
                       <text>'@Html.Raw(curso.Key)',</text>
                   }
            ],
            datasets: [{
                        label: 'Matrículas Ativas',
                backgroundColor: color(window.chartColors.blue).alpha(0.5).rgbString(),
                borderColor: window.chartColors.blue,
                borderWidth: 1,
                data: [
                         @foreach (var curso in Model.Where(m => m.Key != "Total").OrderByDescending(m => m.Value).ToList())
                        {
                            <text>'@curso.Value',</text>
                        }
                ]
            }]

        };

        var pie = {
            labels: [
                  @foreach (var curso in Model.Where(m => m.Key != "Total").OrderByDescending(m => m.Value).ToList())
                   {
                       <text>'@Html.Raw(curso.Key)',</text>
                   }
            ],
            datasets: [{
                        label: 'Matrículas Ativas',
                backgroundColor: getRandomColor(@Model.Where(m => m.Key != "Total").OrderByDescending(m => m.Value).ToList().Count),
                borderColor: window.chartColors.blue,
                borderWidth: 1,
                data: [
                    @foreach (var curso in Model.Where(m => m.Key != "Total").OrderByDescending(m => m.Value).ToList())
                        {
                            var porcentagem = curso.Value * 100 / Model.First(m => m.Key == "Total").Value;
                            <text>'@porcentagem',</text>
                        }
                ]
            }]

        };


        window.onload = function () {
            var ctx = document.getElementById('canvas').getContext('2d');
            window.myBar = new Chart(ctx, {
                type: 'horizontalBar',
                data: barChartData,
                options: {
                    responsive: true,
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: ''
                    }
                }
            });

            var ctx2 = document.getElementById('pie').getContext('2d');
            window.myBar = new Chart(ctx2, {
                type: 'pie',
                data: pie,
                options: {
                    responsive: true,
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Matrículas ativas em %'
                    }
                }
            });

        };



    </script>
}