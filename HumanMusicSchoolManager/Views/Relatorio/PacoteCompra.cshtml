@model RelatorioPacoteCompraViewModel
@{
    ViewData["Title"] = "PacoteCompra";
}

@section Styles{
    <style>
        .list-group {
            margin-bottom: 15px;
        }
    </style>
}

<div class="container-fluid mt--7">
    <div class="row">
        <div class="col-xl-7 mb-5 mb-xl-0">
            <div class="card bg-gradient-default shadow">
                <div class="card-header bg-transparent">
                    <div class="row align-items-center">
                        <div class="col-md-2">
                            <h6 class="text-uppercase text-light ls-1 mb-1">Pacotes</h6>
                            <h2 class="text-white mb-0">Ativos</h2>
                        </div>
                        <div class="col-md-9">
                            <div class="row">
                                <div class="col-md-5">
                                    <label asp-for="Inicial">Data Inicial</label>
                                    <input asp-for="Inicial" type="date" class="form-control" />
                                    <span asp-validation-for="Inicial" class="text-danger"></span>
                                </div>
                                <div class="col-md-5">
                                    <label asp-for="Final">Data Final</label>
                                    <input asp-for="Final" type="date" class="form-control" />
                                    <span asp-validation-for="Final" class="text-danger"></span>
                                </div>
                                <div class="col-md-2" style="padding-top: 32px;">
                                    <button type="submit" class="btn btn-success">Filtrar</button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Chart -->
                    <div class="chart">
                        <div class="chartjs-size-monitor" style="position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;"><div class="chartjs-size-monitor-expand" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:1000000px;height:1000000px;left:0;top:0"></div></div><div class="chartjs-size-monitor-shrink" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:200%;height:200%;left:0; top:0"></div></div></div>
                        <!-- Chart wrapper -->
                        <canvas id="pacotesAtivos" class="chart-canvas chartjs-render-monitor" width="822" height="437" style="display: block; height: 350px; width: 658px;"></canvas>
                    </div>
                </div>
            </div>
        </div>
        @foreach (var ano in Model.PacoteContratados.Select(pc => pc.DataCompra.Year).Distinct())
        {


            @foreach (var mes in Model.PacoteContratados
   .Where(pc => pc.DataCompra.Year == ano)
   .Select(pc => pc.DataCompra.Month)
   .Distinct()
   .OrderBy(pc => pc)
    )
            {
                <div class="col-xl-4 mb-5 mb-xl-0 mt-5">
                    <div class="card shadow">
                        <div class="card-header bg-transparent">
                            <div class="row align-items-center">
                                <div class="col">
                                    <h6 class="text-uppercase text-muted ls-1 mb-1">Pacotes</h6>
                                    <h2 class="mb-0">@mes/@ano</h2>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <!-- Chart -->
                            <div class="chart">
                                <div class="chartjs-size-monitor" style="position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;"><div class="chartjs-size-monitor-expand" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:1000000px;height:1000000px;left:0;top:0"></div></div><div class="chartjs-size-monitor-shrink" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:200%;height:200%;left:0; top:0"></div></div></div>
                                <canvas id="pacote@(mes)@(ano)" class="chart-canvas chartjs-render-monitor" width="822" height="437" style="display: block; height: 350px; width: 658px;"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>

</div>


@section Scripts
{

    <script>
        var OrdersChart = (function() {

	        //
	        // Variables
	        //

	        var $chart = $('#pacotesAtivos');
	        var $ordersSelect = $('[name="ordersSelect"]');

	        //
	        // Methods
	        //

	        // Init chart
	        function initChart($chart) {

		        // Create chart
		        var ordersChart = new Chart($chart, {
			        type: 'horizontalBar',

			        data: {
                        labels: [
                            @foreach (var pacoteAula in Model.PacoteComprasAtivos.Select(pc => pc.PacoteAula).Distinct().ToList())
                            {
                                <text>'@Html.Raw(pacoteAula.Nome)',</text>
                            }
                        ],
				        datasets: [{
					        label: 'Sales',
                            data: [
                                @foreach (var pacoteAula in Model.PacoteComprasAtivos.Select(pc => pc.PacoteAula).Distinct().ToList())
                                {

                                    <text>@(Model.PacoteComprasAtivos.Where(pc => pc.PacoteAulaId == pacoteAula.Id).ToList().Count),</text>
                                }
                            ]
				        }]
			        }
		        });

		        // Save to jQuery object
		        $chart.data('chart', ordersChart);
	        }


	        // Init chart
	        if ($chart.length) {
		        initChart($chart);
	        }

        })();
    </script>

    @foreach (var ano in Model.PacoteContratados.Select(pc => pc.DataCompra.Year).Distinct())
    {


        @foreach (var mes in Model.PacoteContratados
       .Where(pc => pc.DataCompra.Year == ano)
       .Select(pc => pc.DataCompra.Month)
       .Distinct()
       .OrderBy(pc => pc)
       )
        {
            <script>
                var OrdersChart = (function() {

	                //
	                // Variables
	                //

	                var $chart = $('#pacote@(mes)@(ano)');
	                var $ordersSelect = $('[name="ordersSelect"]');

	                //
	                // Methods
	                //

	                // Init chart
	                function initChart($chart) {

		                // Create chart
		                var ordersChart = new Chart($chart, {
			                type: 'horizontalBar',

			                data: {
                                labels: [
                                    @foreach (var pacoteAula in Model.PacoteContratados
                                    .Where(pc => pc.DataCompra.Year == ano && pc.DataCompra.Month == mes)
                                    .Select(pc => pc.PacoteAula).Distinct().ToList())
                                    {
                                        <text>'@Html.Raw(pacoteAula.Nome)',</text>
                                    }
                                ],
				                datasets: [{
					                label: 'Sales',
                                    data: [
                                        @foreach (var pacoteAula in Model.PacoteContratados
                                        .Where(pc => pc.DataCompra.Year == ano && pc.DataCompra.Month == mes)
                                        .Select(pc => pc.PacoteAula).Distinct().ToList())
                                        {
                                            <text>
                                                    @(
                                                        Model.PacoteContratados.Where(pc => pc.PacoteAulaId == pacoteAula.Id)
                                                        .Where(pc => pc.DataCompra.Year == ano && pc.DataCompra.Month == mes)
                                                        .ToList().Count
                                                    ),
                                            </text>
                                        }
                                    ]
				                }]
			                }
		                });

		                // Save to jQuery object
		                $chart.data('chart', ordersChart);
	                }


	                // Init chart
	                if ($chart.length) {
		                initChart($chart);
	                }

                })();
            </script>
        }
    }
}