@model RelatorioAlunosViewModel
@{
    ViewData["Title"] = "Alunos";
}


<div class="row">
    <div class="col-xl-4">
        <div class="card shadow">
            <div class="card-header bg-transparent">
                <div class="row align-items-center">
                    <div class="col">
                        <h6 class="text-uppercase text-muted ls-1 mb-1">Alunos</h6>
                        <h2 class="mb-0">Total</h2>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <!-- Chart -->
                <div class="chart">
                    <canvas id="alunos" class="chart-canvas"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-4">
        <div class="card shadow">
            <div class="card-header bg-transparent">
                <div class="row align-items-center">
                    <div class="col">
                        <h6 class="text-uppercase text-muted ls-1 mb-1">Alunos Por Matrícula</h6>
                        <h2 class="mb-0">Por matrícula</h2>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <!-- Chart -->
                <div class="chart">
                    <canvas id="alunosPorMatricula" class="chart-canvas"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>



    @{ 
        var maxMatricula = Model.Alunos.Max(a => a.Matriculas.Where(m => m.DispSalaId != null).ToList().Count);
    }

@section Scripts{ 
    <script>
        var OrdersChart = (function() {

	        //
	        // Variables
	        //

	        var $chart = $('#alunos');
	        var $ordersSelect = $('[name="ordersSelect"]');


	        //
	        // Methods
	        //

	        // Init chart
	        function initChart($chart) {

		        // Create chart
		        var ordersChart = new Chart($chart, {
			        type: 'bar',
			        
			        data: {
                        labels: ['Total Matrículas', 'Total Alunos',],
				        datasets: [{
					        label: 'Sales',
                            data: [@(Model.TotalMatriculas),@(Model.TotalAlunosMatriculadso)]
				        }]
			        }
		        });

		        // Save to jQuery object
		        $chart.data('chart', ordersChart);
	        }


	        // Init chart
	        if ($chart.length) {
		        initChart($chart);
	        }

        })();
    </script>
    <script>
        var OrdersChart = (function() {

	        //
	        // Variables
	        //

	        var $chart = $('#alunosPorMatricula');
	        var $ordersSelect = $('[name="ordersSelect"]');


	        //
	        // Methods
	        //

	        // Init chart
	        function initChart($chart) {

		        // Create chart
		        var ordersChart = new Chart($chart, {
			        type: 'bar',

			        data: {
                        labels: [
                            @for (var i = 1; i <= maxMatricula; i++)
                            {
                                <text>'@i',</text>
                            }
                        ],
				        datasets: [{
                            label: 'Sales',
                            data: [
                                @for (var i = 1; i <= maxMatricula; i++)
                                {
                                    <text>@(Model.Alunos.Where(a => a.Matriculas.Where(m => m.DispSalaId != null).ToList().Count == i).ToList().Count),</text>
                                }
                            ]

                        }]
                    },
                    options: {
                        
                    }
		        });
                
		        // Save to jQuery object
		        $chart.data('chart', ordersChart);
	        }


	        // Init chart
	        if ($chart.length) {
		        initChart($chart);
	        }

        })();
    </script>
}