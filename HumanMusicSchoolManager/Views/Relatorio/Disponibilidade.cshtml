@model RelatorioGeralProfessoresViewModel
@{
    ViewData["Title"] = "Disponibilidade";
}

<div class="container-fluid mt--7">
    <div class="row">
        <div class="col-xl-7 mb-5 mb-xl-0">
            <div class="card bg-gradient-default shadow">
                <div class="card-header bg-transparent">
                    <div class="row align-items-center">
                        <div class="col">
                            <h6 class="text-uppercase text-light ls-1 mb-1">@ViewBag.Professor</h6>
                            <h2 class="text-white mb-0">Potêncial</h2>
                        </div>
                        <div class="col">
                            <ul class="nav nav-pills justify-content-end">
                                <li class="nav-item col-8  mr-2 mr-md-0" data-toggle="chart" data-target="#chart-sales" data-update="{&quot;data&quot;:{&quot;datasets&quot;:[{&quot;data&quot;:[0, 20, 10, 30, 15, 40, 20, 60, 60]}]}}" data-prefix="$" data-suffix="k">
                                    <select id="professor" class="form-control">
                                        <option></option>
                                        <option>Escola</option>
                                        @foreach (var professor in ViewBag.Professores)
                                        {
                                            <option value="@professor.Id">@professor.Nome</option>
                                        }
                                    </select>
                                </li>
                                <li class="nav-item" data-toggle="chart" data-target="#chart-sales" data-update="{&quot;data&quot;:{&quot;datasets&quot;:[{&quot;data&quot;:[0, 20, 5, 25, 10, 30, 15, 40, 40]}]}}" data-prefix="$" data-suffix="k">
                                    <a onclick="filtrar()" class="btn nav-link py-2 px-3">
                                        <span class="d-none d-md-block">Filtro</span>
                                        <span class="d-md-none">W</span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Chart -->
                    <div class="chart">
                        <div class="chartjs-size-monitor" style="position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;"><div class="chartjs-size-monitor-expand" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:1000000px;height:1000000px;left:0;top:0"></div></div><div class="chartjs-size-monitor-shrink" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:200%;height:200%;left:0; top:0"></div></div></div>
                        <!-- Chart wrapper -->
                        <canvas id="potencial" class="chart-canvas chartjs-render-monitor" width="822" height="437" style="display: block; height: 350px; width: 658px;"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-5">
            <div class="card shadow">
                <div class="card-header bg-transparent">
                    <div class="row align-items-center">
                        <div class="col">
                            <h6 class="text-uppercase text-muted ls-1 mb-1">@ViewBag.Professor</h6>
                            <h2 class="mb-0">Horários</h2>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Chart -->
                    <div class="chart">
                        <div class="chartjs-size-monitor" style="position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;"><div class="chartjs-size-monitor-expand" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:1000000px;height:1000000px;left:0;top:0"></div></div><div class="chartjs-size-monitor-shrink" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:200%;height:200%;left:0; top:0"></div></div></div>
                        <canvas id="horarios" class="chart-canvas chartjs-render-monitor" width="822" height="437" style="display: block; height: 350px; width: 658px;"></canvas>
                    </div>
                </div>
            </div>
        </div>
        </div>
    <div class="row mt-5">
        <div class="col-xl-12 mb-5 mb-xl-0">
            <div class="card shadow">
                <div class="card-header bg-transparent">
                    <div class="row align-items-center">
                        <div class="col">
                            <h6 class="text-uppercase text-muted ls-1 mb-1">@ViewBag.Professor</h6>
                            <h2 class="mb-0">Horários Ocupados</h2>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Chart -->
                    <div class="chart">
                        <div class="chartjs-size-monitor" style="position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;"><div class="chartjs-size-monitor-expand" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:1000000px;height:1000000px;left:0;top:0"></div></div><div class="chartjs-size-monitor-shrink" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:200%;height:200%;left:0; top:0"></div></div></div>
                        <canvas id="horariosOcupados" class="chart-canvas chartjs-render-monitor" width="822" height="437" style="display: block; height: 350px; width: 658px;"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        function filtrar() {
            var professor = document.querySelector("#professor");
            var professorId = professor.options[professor.selectedIndex].value == 'Escola' ? null : professor.options[professor.selectedIndex].value;
            window.location.replace(`/Relatorio/Disponibilidade?professorId=${professorId}`);
        }
    </script>
    <script>
        var OrdersChart = (function() {

	        //
	        // Variables
	        //

	        var $chart = $('#potencial');
	        var $ordersSelect = $('[name="ordersSelect"]');


	        //
	        // Methods
	        //

	        // Init chart
	        function initChart($chart) {

		        // Create chart
		        var ordersChart = new Chart($chart, {
			        type: 'bar',

			        data: {
                        labels: ['Total', 'Com individuais', 'Com alunos', 'Disponível'],
				        datasets: [{
					        label: 'Sales',
                            data: [@Model.Potencial, @Model.PotencialAtual, @Model.Matriculas, @(Model.PotencialAtual - Model.Matriculas)]
				        }]
			        }
		        });

		        // Save to jQuery object
		        $chart.data('chart', ordersChart);
	        }


	        // Init chart
	        if ($chart.length) {
		        initChart($chart);
	        }

        })();
    </script>
    <script>
        var OrdersChart = (function () {

            //
            // Variables
            //

            var $chart = $('#horarios');
            var $ordersSelect = $('[name="ordersSelect"]');


            //
            // Methods
            //

            // Init chart
            function initChart($chart) {

                // Create chart
                var ordersChart = new Chart($chart, {
                    type: 'pie',

                    data: {
                        labels: [
                            'Disponíveis', 'Ocupados'
                        ],
                        datasets: [{
                            label: 'Sales',
                            data: [
                                @Model.HorariosDisponiveis,@Model.HorariosOcupados
                            ],
                            backgroundColor: ['#11cdef','#f5365c']

                        }]
                    },
                    options: {

                    }
                });

                // Save to jQuery object
                $chart.data('chart', ordersChart);
            }


            // Init chart
            if ($chart.length) {
                initChart($chart);
            }

        })();
    </script>
    <script>
        var OrdersChart = (function() {

	        //
	        // Variables
	        //

	        var $chart = $('#horariosOcupados');
	        var $ordersSelect = $('[name="ordersSelect"]');


	        //
	        // Methods
	        //

	        // Init chart
	        function initChart($chart) {

		        // Create chart
		        var ordersChart = new Chart($chart, {
			        type: 'bar',

			        data: {
                        labels: [
                            @{
                                if (Model.DispSalasOcupados.Count > 0)
                                {
                                    var maximoAluno = Model.DispSalasOcupados.Max(ds => ds.Matriculas.Count);

                                    for (var i = 1; i <= maximoAluno; i++)
                                    {
                                       <text>'@(i) @(i < 2 ? "Aluno" : "Alunos")',</text>
                                    }
                                }
                            }
                        ],
				        datasets: [{
					        label: 'Sales',
                            data: [
                                @{
                                if (Model.DispSalasOcupados.Count > 0)
                                {
                                    var maximoAluno = Model.DispSalasOcupados.Max(ds => ds.Matriculas.Count);

                                    for (var i = 1; i <= maximoAluno; i++)
                                    {
                                       <text>@Model.DispSalasOcupados.Where(ds => ds.Matriculas.Count == i).Count(),</text>
                                    }
                                }
                            }
                            ]
				        }]
			        }
		        });

		        // Save to jQuery object
		        $chart.data('chart', ordersChart);
	        }


	        // Init chart
	        if ($chart.length) {
		        initChart($chart);
	        }

        })();
    </script>
}